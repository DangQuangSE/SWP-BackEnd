package com.S_Health.GenderHealthCare.service.authentication;

import com.S_Health.GenderHealthCare.enums.UserRole;
import jakarta.mail.internet.MimeMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;
import org.thymeleaf.TemplateEngine;
import org.thymeleaf.context.Context;

import java.time.LocalDate;

@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    @Autowired
    private TemplateEngine templateEngine;


    public void sendOtp(String toEmail, String otp) {
        try{
            Context context = new Context();

            context.setVariable("name", toEmail);
            context.setVariable("otp", otp);
            context.setVariable("messageLine1", "B·∫°n v·ª´a y√™u c·∫ßu x√°c minh t√†i kho·∫£n. ƒê√¢y l√† m√£ OTP c·ªßa b·∫°n:");

            String html = templateEngine.process("emailotp", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject("M√£ x√°c minh ƒëƒÉng k√Ω");
            helper.setText(html, true); // true = n·ªôi dung HTML

            mailSender.send(message);
        } catch (Exception e) {
            System.out.println("L·ªói g·ª≠i email: " + e.getMessage());
        }
    }

    public void sendForgotPasswordOtp(String toEmail, String otp) {
        try{
            Context context = new Context();

            context.setVariable("name", toEmail);
            context.setVariable("otp", otp);
            context.setVariable("messageLine1", "B·∫°n ƒë√£ y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u. ƒê√¢y l√† m√£ OTP c·ªßa b·∫°n:");

            String html = templateEngine.process("emailotp", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject("M√£ x√°c minh kh√¥i ph·ª•c m·∫≠t kh·∫©u");
            helper.setText(html, true); // true = n·ªôi dung HTML

            mailSender.send(message);
        } catch (Exception e) {
            System.out.println("L·ªói g·ª≠i email qu√™n m·∫≠t kh·∫©u : " + e.getMessage());
        }
    }

    public void sendWelcome(String toEmail) {
        try{

            Context context = new Context();
            context.setVariable("name", toEmail);

            String html = templateEngine.process("emailwelcome", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject("Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi S-HealthCare");
            helper.setText(html, true);

            mailSender.send(message);
        }catch (Exception e){
            System.out.println("L·ªói g·ª≠i email ch√†o m·ª´ng: " + e.getMessage());
        }
    }

    public void sendWelcomeWithCredentials(String email, String randomPassword, UserRole role) {
        try {
            Context context = new Context();
            context.setVariable("email", email);
            context.setVariable("password", randomPassword);
            context.setVariable("role", role.name());

            String html = templateEngine.process("welcome-credentials", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(email);
            helper.setSubject("Th√¥ng tin t√†i kho·∫£n " + role.name() + " - S-HealthCare");
            helper.setText(html, true);
            mailSender.send(message);
        } catch (Exception e) {
            System.out.println("L·ªói g·ª≠i email: " + e.getMessage());
        }

    }

    public void sendUrlCurtomerZoom (String toEmail, String startTime, String joinUrl, String serviceName) {
        try{

            Context context = new Context();
            context.setVariable("name", toEmail);
            context.setVariable("startTime", startTime);
            context.setVariable("joinUrl", joinUrl);
            context.setVariable("serviceName", serviceName);

            String html = templateEngine.process("emailZoom", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject("[SHeathCare] Th√¥ng tin bu·ªïi t∆∞ v·∫•n c·ªßa b·∫°n");
            helper.setText(html, true);

            mailSender.send(message);
        }catch (Exception e){
            System.out.println("L·ªói g·ª≠i email Zoom cho kh√°ch h√†ng: " + e.getMessage());
        }
    }

    public void sendUrlConsultantZoom (String toEmail, String startTime, String startUrl, String serviceName) {
        try{

            Context context = new Context();
            context.setVariable("name", toEmail);
            context.setVariable("startTime", startTime);
            context.setVariable("startUrl", startUrl);
            context.setVariable("serviceName", serviceName);

            String html = templateEngine.process("ConsultantZoom", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject("[SHeathCare] Th√¥ng tin bu·ªïi t∆∞ v·∫•n c·ªßa b·∫°n");
            helper.setText(html, true);

            mailSender.send(message);
        }catch (Exception e){
            System.out.println("L·ªói g·ª≠i email Zoom cho b√°c sƒ©: " + e.getMessage());
        }
    }

    /**
     * G·ª≠i email nh·∫Øc nh·ªü l·ªãch h·∫πn s·∫Øp t·ªõi
     */
    public void sendAppointmentReminder(String toEmail, LocalDate date) {
        try {
            Context context = new Context();
            context.setVariable("customerName", toEmail);
            context.setVariable("appointmentDate", date);
//            context.setVariable("appointmentDate", appointmentDate);
//            context.setVariable("consultantName", consultantName);
//            context.setVariable("appointmentTime", appointmentTime);
//            context.setVariable("note", note);
//            context.setVariable("daysLeft", daysLeft);

            String html = templateEngine.process("appointment-reminder", context);

            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject("üîî Nh·∫Øc nh·ªü: L·ªãch h·∫πn s·∫Øp t·ªõi c·ªßa b·∫°n - SHealthCare");
            helper.setText(html, true);

            mailSender.send(message);
            System.out.println("ƒê√£ g·ª≠i email nh·∫Øc nh·ªü l·ªãch h·∫πn t·ªõi: " + toEmail);
        } catch (Exception e) {
            System.out.println("L·ªói g·ª≠i email nh·∫Øc nh·ªü l·ªãch h·∫πn: " + e.getMessage());
        }
    }
}
